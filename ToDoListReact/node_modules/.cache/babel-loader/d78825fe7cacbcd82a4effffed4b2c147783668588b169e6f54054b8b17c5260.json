{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:5188/\";\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name: name,\n        isComplete: false\n      });\n      return result.data;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      return {};\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await axios.put(`${apiUrl}/items/${id}`, {\n        isComplete: isComplete\n      });\n      return result.data;\n    } catch (error) {\n      console.error('Error setting task completion:', error);\n      return {};\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      const result = await axios.delete(`${apiUrl}/items/${id}`);\n      return result.data;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      return {};\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","getTasks","result","get","data","addTask","name","console","log","post","isComplete","error","setCompleted","id","put","deleteTask","delete"],"sources":["C:/Users/user1/Documents/רבקי למודים/פרקטיקוד/PractiCode4/ToDoListReact/src/service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl = \"http://localhost:5188/\";\r\n\r\nexport default {\r\n  getTasks: async () => {\r\n    const result = await axios.get(`${apiUrl}/items`);    \r\n    return result.data;\r\n  },\r\n\r\n  addTask: async(name)=>{\r\n    console.log('addTask', name);\r\n    try {\r\n      const result = await axios.post(`${apiUrl}/items`, { name: name, isComplete: false });\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n      return {};\r\n    }\r\n  },\r\n\r\n  setCompleted: async(id, isComplete)=>{\r\n    console.log('setCompleted', {id, isComplete});\r\n    try {\r\n      const result = await axios.put(`${apiUrl}/items/${id}`, { isComplete: isComplete });\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('Error setting task completion:', error);\r\n      return {};\r\n    }\r\n  },\r\n\r\n  deleteTask:async(id)=>{\r\n    console.log('deleteTask', id);\r\n    try {\r\n      const result = await axios.delete(`${apiUrl}/items/${id}`);\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      return {};\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,wBAAwB;AAEvC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,MAAO,QAAO,CAAC;IACjD,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC5B,IAAI;MACF,MAAMJ,MAAM,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAE,GAAET,MAAO,QAAO,EAAE;QAAEM,IAAI,EAAEA,IAAI;QAAEI,UAAU,EAAE;MAAM,CAAC,CAAC;MACrF,OAAOR,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAEDC,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEH,UAAU,KAAG;IACnCH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACK,EAAE;MAAEH;IAAU,CAAC,CAAC;IAC7C,IAAI;MACF,MAAMR,MAAM,GAAG,MAAMH,KAAK,CAACe,GAAG,CAAE,GAAEd,MAAO,UAASa,EAAG,EAAC,EAAE;QAAEH,UAAU,EAAEA;MAAW,CAAC,CAAC;MACnF,OAAOR,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAEDI,UAAU,EAAC,MAAMF,EAAE,IAAG;IACpBN,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEK,EAAE,CAAC;IAC7B,IAAI;MACF,MAAMX,MAAM,GAAG,MAAMH,KAAK,CAACiB,MAAM,CAAE,GAAEhB,MAAO,UAASa,EAAG,EAAC,CAAC;MAC1D,OAAOX,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,CAAC,CAAC;IACX;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}